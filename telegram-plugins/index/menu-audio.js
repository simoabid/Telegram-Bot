const handler = async (m, { bot, usedPrefix }) => {
  try {
    const userId = m.from_user?.id || m.chat;

    // Initialize user data if not exists
    if (!global.db.data.users[userId]) {
      global.db.data.users[userId] = { lastcofre: 0 };
    }

    let img = 'https://cdn-sunflareteam.vercel.app/images/fe2072569a.jpg';
    let texto = `üîä *AUDIO & MUSIC MENU* üéµ

üéµ *MUSIC DOWNLOADS*
‚Ä¢ ${usedPrefix}play <song> - Search and download music
‚Ä¢ ${usedPrefix}play1 <song> - Alternative music search
‚Ä¢ ${usedPrefix}play2 <song> - SoundCloud alternative
‚Ä¢ ${usedPrefix}playvid <song> - Play video version
‚Ä¢ ${usedPrefix}splay <song> - Spotify play
‚Ä¢ ${usedPrefix}sp <song> - Spotify short
‚Ä¢ ${usedPrefix}music <song> - Music downloader
‚Ä¢ ${usedPrefix}ytmp3 <url> - YouTube audio downloader

üé§ *VOICE & SPEECH*
‚Ä¢ ${usedPrefix}tts <text> - Text to speech
‚Ä¢ ${usedPrefix}voice <text> - Voice synthesis
‚Ä¢ ${usedPrefix}speak <text> - Make bot speak
‚Ä¢ ${usedPrefix}voicechanger <audio> - Change voice
‚Ä¢ ${usedPrefix}pitch <audio> - Adjust pitch
‚Ä¢ ${usedPrefix}speed <audio> - Change playback speed
‚Ä¢ ${usedPrefix}robot <audio> - Robot voice effect

üéß *AUDIO EFFECTS*
‚Ä¢ ${usedPrefix}bass <audio> - Bass boost effect

üéº *MUSIC EFFECTS*
‚Ä¢ ${usedPrefix}echo <audio> - Echo effect
‚Ä¢ ${usedPrefix}reverb <audio> - Reverb effect
‚Ä¢ ${usedPrefix}distortion <audio> - Distortion effect
‚Ä¢ ${usedPrefix}flanger <audio> - Flanger effect
‚Ä¢ ${usedPrefix}chorus <audio> - Chorus effect
‚Ä¢ ${usedPrefix}phaser <audio> - Phaser effect
‚Ä¢ ${usedPrefix}tremolo <audio> - Tremolo effect
‚Ä¢ ${usedPrefix}vibrato <audio> - Vibrato effect

üîá *AUDIO PROCESSING*
‚Ä¢ ${usedPrefix}normalize <audio> - Normalize volume
‚Ä¢ ${usedPrefix}compress <audio> - Audio compression
‚Ä¢ ${usedPrefix}amplify <audio> - Amplify audio
‚Ä¢ ${usedPrefix}fade <audio> - Fade in/out
‚Ä¢ ${usedPrefix}trim <audio> - Trim audio
‚Ä¢ ${usedPrefix}loop <audio> - Loop audio
‚Ä¢ ${usedPrefix}merge <audios> - Merge audio files
‚Ä¢ ${usedPrefix}split <audio> - Split audio

üé® *AUDIO FILTERS*
‚Ä¢ ${usedPrefix}lowpass <audio> - Low-pass filter
‚Ä¢ ${usedPrefix}highpass <audio> - High-pass filter
‚Ä¢ ${usedPrefix}bandpass <audio> - Band-pass filter
‚Ä¢ ${usedPrefix}notch <audio> - Notch filter
‚Ä¢ ${usedPrefix}equalizer <audio> - Equalizer
‚Ä¢ ${usedPrefix}limiter <audio> - Audio limiter
‚Ä¢ ${usedPrefix}gate <audio> - Noise gate
‚Ä¢ ${usedPrefix}deesser <audio> - De-esser

üéπ *MUSIC GENERATION*
‚Ä¢ ${usedPrefix}generate-music <style> - AI music generation
‚Ä¢ ${usedPrefix}melody <key> - Generate melodies
‚Ä¢ ${usedPrefix}beat <style> - Create beats
‚Ä¢ ${usedPrefix}chord <progression> - Chord progressions
‚Ä¢ ${usedPrefix}ambient <mood> - Ambient sounds
‚Ä¢ ${usedPrefix}binaural <frequency> - Binaural beats
‚Ä¢ ${usedPrefix}whitenoise - White noise generator
‚Ä¢ ${usedPrefix}pinknoise - Pink noise generator

üîç *MUSIC RECOGNITION*
‚Ä¢ ${usedPrefix}whatmusic <audio> - Identify music
‚Ä¢ ${usedPrefix}shazam <audio> - Music recognition
‚Ä¢ ${usedPrefix}lyrics <song> - Get song lyrics
‚Ä¢ ${usedPrefix}artist <name> - Artist information
‚Ä¢ ${usedPrefix}album <name> - Album information
‚Ä¢ ${usedPrefix}genre <music> - Identify genre
‚Ä¢ ${usedPrefix}bpm <audio> - Detect BPM
‚Ä¢ ${usedPrefix}key <audio> - Detect musical key

üé™ *SOUND EFFECTS*
‚Ä¢ ${usedPrefix}applause - Applause sound
‚Ä¢ ${usedPrefix}drumroll - Drum roll effect
‚Ä¢ ${usedPrefix}airhorn - Air horn sound
‚Ä¢ ${usedPrefix}explosion - Explosion sound
‚Ä¢ ${usedPrefix}laser - Laser sound effect
‚Ä¢ ${usedPrefix}bell - Bell sound
‚Ä¢ ${usedPrefix}whistle - Whistle sound
‚Ä¢ ${usedPrefix}siren - Siren sound

üåßÔ∏è *NATURE SOUNDS*
‚Ä¢ ${usedPrefix}rain - Rain sounds
‚Ä¢ ${usedPrefix}thunder - Thunder sounds
‚Ä¢ ${usedPrefix}ocean - Ocean waves
‚Ä¢ ${usedPrefix}forest - Forest ambience
‚Ä¢ ${usedPrefix}fire - Crackling fire
‚Ä¢ ${usedPrefix}wind - Wind sounds
‚Ä¢ ${usedPrefix}birds - Bird sounds
‚Ä¢ ${usedPrefix}waterfall - Waterfall sounds

üéÆ *GAMING AUDIO*
‚Ä¢ ${usedPrefix}8bit <audio> - 8-bit conversion
‚Ä¢ ${usedPrefix}chiptune <melody> - Chiptune music
‚Ä¢ ${usedPrefix}retro <audio> - Retro game sounds
‚Ä¢ ${usedPrefix}arcade <audio> - Arcade effects
‚Ä¢ ${usedPrefix}powerup - Power-up sounds
‚Ä¢ ${usedPrefix}gameover - Game over sound
‚Ä¢ ${usedPrefix}victory - Victory fanfare
‚Ä¢ ${usedPrefix}coin - Coin collection sound

üé≠ *VOICE MODULATION*
‚Ä¢ ${usedPrefix}male <audio> - Male voice
‚Ä¢ ${usedPrefix}female <audio> - Female voice
‚Ä¢ ${usedPrefix}child <audio> - Child voice
‚Ä¢ ${usedPrefix}elderly <audio> - Elderly voice
‚Ä¢ ${usedPrefix}alien <audio> - Alien voice
‚Ä¢ ${usedPrefix}demon <audio> - Demon voice
‚Ä¢ ${usedPrefix}chipmunk <audio> - Chipmunk voice
‚Ä¢ ${usedPrefix}giant <audio> - Giant voice

üîÑ *FORMAT CONVERSION*
‚Ä¢ ${usedPrefix}tomp3 <audio> - Convert to MP3
‚Ä¢ ${usedPrefix}towav <audio> - Convert to WAV
‚Ä¢ ${usedPrefix}toflac <audio> - Convert to FLAC
‚Ä¢ ${usedPrefix}toogg <audio> - Convert to OGG
‚Ä¢ ${usedPrefix}tom4a <audio> - Convert to M4A
‚Ä¢ ${usedPrefix}toacc <audio> - Convert to AAC
‚Ä¢ ${usedPrefix}compress-audio <audio> - Compress audio
‚Ä¢ ${usedPrefix}quality <audio> <bitrate> - Change quality

üìä *AUDIO ANALYSIS*
‚Ä¢ ${usedPrefix}analyze-audio <audio> - Audio analysis
‚Ä¢ ${usedPrefix}spectrum <audio> - Frequency spectrum
‚Ä¢ ${usedPrefix}waveform <audio> - Generate waveform
‚Ä¢ ${usedPrefix}duration <audio> - Get audio duration
‚Ä¢ ${usedPrefix}volume <audio> - Check volume levels
‚Ä¢ ${usedPrefix}silence <audio> - Detect silence
‚Ä¢ ${usedPrefix}peak <audio> - Find peak levels
‚Ä¢ ${usedPrefix}rms <audio> - RMS analysis

üéº *MUSIC THEORY*
‚Ä¢ ${usedPrefix}scale <key> - Musical scales
‚Ä¢ ${usedPrefix}interval <notes> - Note intervals
‚Ä¢ ${usedPrefix}transpose <audio> <semitones> - Transpose music
‚Ä¢ ${usedPrefix}tuner - Audio tuner
‚Ä¢ ${usedPrefix}metronome <bpm> - Metronome
‚Ä¢ ${usedPrefix}chord-finder <notes> - Find chords
‚Ä¢ ${usedPrefix}progression <chords> - Chord progressions
‚Ä¢ ${usedPrefix}harmonize <melody> - Add harmony

üéµ *PLAYLIST TOOLS*
‚Ä¢ ${usedPrefix}playlist <name> - Create playlist
‚Ä¢ ${usedPrefix}shuffle <playlist> - Shuffle playlist
‚Ä¢ ${usedPrefix}mix <songs> - Mix songs together
‚Ä¢ ${usedPrefix}crossfade <songs> - Crossfade between songs
‚Ä¢ ${usedPrefix}queue <songs> - Queue management
‚Ä¢ ${usedPrefix}radio <genre> - Genre-based radio
‚Ä¢ ${usedPrefix}recommendations <song> - Music recommendations

üí° *TIPS & INFORMATION:*
‚Ä¢ Use high-quality audio files for better results
‚Ä¢ Some effects work better with specific audio types
‚Ä¢ Processing time depends on audio length and complexity
‚Ä¢ Premium users get access to advanced effects
‚Ä¢ Combine multiple effects for unique sounds
‚Ä¢ Use headphones for better audio quality assessment`;

    // Send photo with caption for Telegram
    try {
      await bot.sendPhoto(m.chat, img, {
        caption: texto,
        parse_mode: 'Markdown'
      });
    } catch (error) {
      // Fallback to text message if image fails
      await bot.sendMessage(m.chat, texto, {
        parse_mode: 'Markdown'
      });
    }

  } catch (error) {
    console.error('Error in audio menu command:', error);
    await bot.sendMessage(m.chat, '‚ùå An error occurred while displaying the audio menu.');
  }
};

handler.help = ['audio', 'menuaudio', 'audiomenu', 'music'];
handler.tags = ['main'];
handler.command = ['audio', 'menuaudio', 'audiomenu', 'music', 'sound'];

export default handler; 