const handler = async (m, { bot, usedPrefix }) => {
  try {
    const userId = m.from_user?.id || m.chat;

    // Initialize user data if not exists
    if (!global.db.data.users[userId]) {
      global.db.data.users[userId] = { lastcofre: 0 };
    }

    let img = 'https://cdn-sunflareteam.vercel.app/images/fe2072569a.jpg';
    let texto = `‚ÑπÔ∏è *BOT INFORMATION MENU* üìä

ü§ñ *BOT STATUS & INFO*
‚Ä¢ ${usedPrefix}info - Complete bot information
‚Ä¢ ${usedPrefix}botinfo - Bot details and features
‚Ä¢ ${usedPrefix}infobot - Bot info alternative
‚Ä¢ ${usedPrefix}ping - Check bot response time
‚Ä¢ ${usedPrefix}estado - Current bot status
‚Ä¢ ${usedPrefix}horario - Bot schedule/timezone

üìä *SYSTEM INFORMATION*
‚Ä¢ ${usedPrefix}sistema - System specifications
‚Ä¢ ${usedPrefix}system - System alternative
‚Ä¢ ${usedPrefix}runtime - Runtime information
‚Ä¢ ${usedPrefix}uptime - Uptime information

üìà *STATISTICS*
‚Ä¢ ${usedPrefix}totalfunciones - Total functions count
‚Ä¢ ${usedPrefix}newcommand - New command suggestions
‚Ä¢ ${usedPrefix}sug - Suggestion shortcut

üë• *USER INFORMATION*
‚Ä¢ ${usedPrefix}perfil - Your user profile
‚Ä¢ ${usedPrefix}paisinfo <country> - Country information
‚Ä¢ ${usedPrefix}flag <country> - Country flag info

üåê *SERVER & NETWORK*
‚Ä¢ ${usedPrefix}serverinfo - Server information
‚Ä¢ ${usedPrefix}network - Network status
‚Ä¢ ${usedPrefix}latency - Network latency
‚Ä¢ ${usedPrefix}bandwidth - Bandwidth usage
‚Ä¢ ${usedPrefix}connectivity - Connection status
‚Ä¢ ${usedPrefix}endpoints - API endpoints status

üì± *PLATFORM INFO*
‚Ä¢ ${usedPrefix}telegram - Telegram platform info
‚Ä¢ ${usedPrefix}whatsapp - WhatsApp platform info
‚Ä¢ ${usedPrefix}platform - Current platform
‚Ä¢ ${usedPrefix}compatibility - Platform compatibility
‚Ä¢ ${usedPrefix}features - Available features

üîß *TECHNICAL DETAILS*
‚Ä¢ ${usedPrefix}dependencies - Bot dependencies
‚Ä¢ ${usedPrefix}modules - Loaded modules
‚Ä¢ ${usedPrefix}plugins - Plugin information
‚Ä¢ ${usedPrefix}libraries - Used libraries
‚Ä¢ ${usedPrefix}apis - Connected APIs
‚Ä¢ ${usedPrefix}database - Database status

üìã *HELP & SUPPORT*
‚Ä¢ ${usedPrefix}help - General help
‚Ä¢ ${usedPrefix}guide - User guide
‚Ä¢ ${usedPrefix}commands - All commands list
‚Ä¢ ${usedPrefix}faq - Frequently asked questions
‚Ä¢ ${usedPrefix}support - Support information
‚Ä¢ ${usedPrefix}contact - Contact details

üéØ *FEATURE OVERVIEW*
‚Ä¢ ${usedPrefix}features - All bot features
‚Ä¢ ${usedPrefix}capabilities - Bot capabilities
‚Ä¢ ${usedPrefix}newfeatures - Latest features
‚Ä¢ ${usedPrefix}updates - Recent updates
‚Ä¢ ${usedPrefix}changelog - Change log
‚Ä¢ ${usedPrefix}roadmap - Development roadmap

üåü *PREMIUM INFO*
‚Ä¢ ${usedPrefix}premium - Premium features info
‚Ä¢ ${usedPrefix}subscription - Subscription details
‚Ä¢ ${usedPrefix}pricing - Premium pricing
‚Ä¢ ${usedPrefix}benefits - Premium benefits
‚Ä¢ ${usedPrefix}upgrade - How to upgrade
‚Ä¢ ${usedPrefix}premiumstatus - Check premium status

üîó *LINKS & RESOURCES*
‚Ä¢ ${usedPrefix}links - Important links
‚Ä¢ ${usedPrefix}community - Community links
‚Ä¢ ${usedPrefix}social - Social media links
‚Ä¢ ${usedPrefix}github - Source code repository
‚Ä¢ ${usedPrefix}documentation - Documentation
‚Ä¢ ${usedPrefix}tutorials - Tutorial resources

üìä *USAGE METRICS*
‚Ä¢ ${usedPrefix}dailystats - Daily usage stats
‚Ä¢ ${usedPrefix}weeklystats - Weekly usage stats
‚Ä¢ ${usedPrefix}monthlystats - Monthly usage stats
‚Ä¢ ${usedPrefix}popularcmds - Most popular commands
‚Ä¢ ${usedPrefix}activeusers - Active users count

üèÜ *ACHIEVEMENTS & MILESTONES*
‚Ä¢ ${usedPrefix}milestones - Bot milestones
‚Ä¢ ${usedPrefix}achievements - Bot achievements
‚Ä¢ ${usedPrefix}records - Usage records
‚Ä¢ ${usedPrefix}leaderboard - User leaderboard
‚Ä¢ ${usedPrefix}topusers - Top users ranking

‚öôÔ∏è *CONFIGURATION INFO*
‚Ä¢ ${usedPrefix}config - Bot configuration
‚Ä¢ ${usedPrefix}settings - Current settings
‚Ä¢ ${usedPrefix}permissions - Permission levels
‚Ä¢ ${usedPrefix}limits - Usage limits
‚Ä¢ ${usedPrefix}restrictions - Current restrictions

üé® *CUSTOMIZATION*
‚Ä¢ ${usedPrefix}themes - Available themes
‚Ä¢ ${usedPrefix}languages - Supported languages
‚Ä¢ ${usedPrefix}timezone - Timezone information
‚Ä¢ ${usedPrefix}localization - Localization options

üí° *TIPS & INFORMATION:*
‚Ä¢ Use these commands to learn more about the bot
‚Ä¢ Check ${usedPrefix}ping regularly to monitor bot health
‚Ä¢ Premium users get additional information and statistics
‚Ä¢ Some commands may show different info based on your permissions`;

    // Send photo with caption for Telegram
    try {
      await bot.sendPhoto(m.chat, img, {
        caption: texto,
        parse_mode: 'Markdown'
      });
    } catch (error) {
      // Fallback to text message if image fails
      await bot.sendMessage(m.chat, texto, {
        parse_mode: 'Markdown'
      });
    }

  } catch (error) {
    console.error('Error in info menu command:', error);
    await bot.sendMessage(m.chat, '‚ùå An error occurred while displaying the info menu.');
  }
};

handler.help = ['info', 'menuinfo', 'infomenu', 'botinfo'];
handler.tags = ['main'];
handler.command = ['info', 'menuinfo', 'infomenu', 'botinfo', 'information'];

export default handler; 